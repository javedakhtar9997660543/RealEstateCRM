// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace AdminProject.PersistenceLayer.Repository.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    partial class AdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.AddressMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddressStatus")
                        .HasColumnType("int");

                    b.Property<int?>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lattitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerType")
                        .HasColumnType("int");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddressMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.CommonSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayValue")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MainType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommonSetup");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.CompanyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactFor")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("COUNTRYCODE")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Abbreviation")
                        .HasColumnName("COUNTRYABBREV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddressStyleId")
                        .HasColumnName("ADDRESSSTYLE")
                        .HasColumnType("int");

                    b.Property<decimal>("AllMembersFlag")
                        .HasColumnType("decimal(9,4)");

                    b.Property<string>("AlternateCode")
                        .HasColumnName("ALTERNATECODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryAdjective")
                        .HasColumnName("COUNTRYADJECTIVE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryAdjectiveTId")
                        .HasColumnName("COUNTRYADJECTIVE_TID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCeased")
                        .HasColumnName("DATECEASED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCommenced")
                        .HasColumnName("DATECOMMENCED")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultCurrencyId")
                        .HasColumnName("DEFAULTCURRENCY")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DefaultTaxId")
                        .HasColumnName("DEFAULTTAXCODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InformalName")
                        .HasColumnName("INFORMALNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InformalNameTId")
                        .HasColumnName("INFORMALNAME_TID")
                        .HasColumnType("int");

                    b.Property<string>("IsdCode")
                        .HasColumnName("ISD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("COUNTRY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NameStyleId")
                        .HasColumnName("NAMESTYLE")
                        .HasColumnType("int");

                    b.Property<int?>("NameTId")
                        .HasColumnName("COUNTRY_TID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnName("NOTES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotesTId")
                        .HasColumnName("NOTES_TID")
                        .HasColumnType("int");

                    b.Property<decimal?>("PostCodeAutoFlag")
                        .HasColumnType("decimal(9,4)");

                    b.Property<decimal?>("PostCodeFirst")
                        .HasColumnName("POSTCODEFIRST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PostCodeLiteral")
                        .HasColumnName("POSTCODELITERAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostCodeLiteralTId")
                        .HasColumnName("POSTCODELITERAL_TID")
                        .HasColumnType("int");

                    b.Property<int?>("PostCodeSearchCodeId")
                        .HasColumnName("POSTCODESEARCHCODE")
                        .HasColumnType("int");

                    b.Property<string>("PostalName")
                        .HasColumnName("POSTALNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalNameTId")
                        .HasColumnName("POSTALNAME_TID")
                        .HasColumnType("int");

                    b.Property<bool?>("ReportPriorArt")
                        .HasColumnName("PRIORARTFLAG")
                        .HasColumnType("bit");

                    b.Property<decimal?>("StateAbbreviated")
                        .HasColumnName("STATEABBREVIATED")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StateLabel")
                        .HasColumnName("STATELITERAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateLabelTId")
                        .HasColumnName("STATELITERAL_TID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxNoMandatory")
                        .HasColumnName("REQUIREEXEMPTTAXNO")
                        .HasColumnType("decimal(9,4)");

                    b.Property<string>("Type")
                        .HasColumnName("RECORDTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("WorkDayFlag")
                        .HasColumnName("WORKDAYFLAG")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AddressStyleId");

                    b.HasIndex("DefaultCurrencyId");

                    b.HasIndex("DefaultTaxId");

                    b.HasIndex("NameStyleId");

                    b.HasIndex("PostCodeSearchCodeId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.CountryGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("TREATYCODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberCountry")
                        .HasColumnName("MEMBERCOUNTRY")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("AssociateMember")
                        .HasColumnName("ASSOCIATEMEMBER")
                        .HasColumnType("decimal(9,4)");

                    b.Property<DateTime?>("AssociateMemberDate")
                        .HasColumnName("ASSOCIATEMEMBERDATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCeased")
                        .HasColumnName("DATECEASED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCommenced")
                        .HasColumnName("DATECOMMENCED")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DefaultFlag")
                        .HasColumnName("DEFAULTFLAG")
                        .HasColumnType("decimal(9,4)");

                    b.Property<DateTime?>("FullMembershipDate")
                        .HasColumnName("FULLMEMBERDATE")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PreventNationalPhase")
                        .HasColumnName("PREVENTNATPHASE")
                        .HasColumnType("bit");

                    b.Property<string>("PropertyTypes")
                        .HasColumnName("PROPERTYTYPES")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "MemberCountry");

                    b.ToTable("CountryGroup");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("CURRENCY")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("DecimalPlaces")
                        .HasColumnName("DECIMALPLACES")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTId")
                        .HasColumnName("DESCRIPTION_TID")
                        .HasColumnType("int");

                    b.Property<decimal?>("SellRate")
                        .HasColumnType("decimal(9,4)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.DailyLoginHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrowserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastExtension")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoginType")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DailyLoginHistory");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.EmailMergeFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("SrcField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrcFieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("EmailMergeFields");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.EmailService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BccEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAttachment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHtml")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateCode")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("ToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailService");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HtmlContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateCode")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppDomainName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("FormattedMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProcessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("ThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Win32ThreadId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.LoginAttemptHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FailedAttempt")
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginAttemptHistory");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.ModuleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStoreWise")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleCode")
                        .HasColumnType("int");

                    b.Property<string>("ModuleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentModuleId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ModuleMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.OtpMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OtpMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("DenyPermission")
                        .HasColumnName("DENYPERMISSION")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GrantPermission")
                        .HasColumnName("GRANTPERMISSION")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelKey")
                        .HasColumnName("LEVELKEY")
                        .HasColumnType("int");

                    b.Property<string>("LevelTable")
                        .HasColumnName("LEVELTABLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObjectIntegerKey")
                        .HasColumnName("OBJECTINTEGERKEY")
                        .HasColumnType("int");

                    b.Property<string>("ObjectStringKey")
                        .HasColumnName("OBJECTSTRINGKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectTable")
                        .HasColumnName("OBJECTTABLE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.RoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.RoleModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleMasterId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleMasterId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleMasterId");

                    b.HasIndex("RoleMasterId");

                    b.ToTable("RoleModule");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.RowAccess", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnName("ACCESSNAME")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnName("ACCESSDESC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("RowAccess");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.SecurityTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTId")
                        .HasColumnName("DESCRIPTION_TID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("TASKNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskNameTId")
                        .HasColumnName("TASKNAME_TID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TASK");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.SettingDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTid")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NameTid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SettingDefinition");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("STATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnName("COUNTRYCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasColumnName("STATENAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NameTId")
                        .HasColumnName("STATENAME_TID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdleSystemDay")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoginFailedAttempt")
                        .HasColumnType("int");

                    b.Property<int>("LogoutTime")
                        .HasColumnType("int");

                    b.Property<int>("MaxLeaveMarkDays")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeeklyOffDays")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.TableCode", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("TABLECODE")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NameTId")
                        .HasColumnName("DESCRIPTION_TID")
                        .HasColumnType("int");

                    b.Property<short>("TableTypeId")
                        .HasColumnName("TABLETYPE")
                        .HasColumnType("smallint");

                    b.Property<string>("UserCode")
                        .HasColumnName("USERCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TableTypeId");

                    b.ToTable("TableCode");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.TableType", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnName("TABLETYPE")
                        .HasColumnType("smallint");

                    b.Property<string>("DatabaseTable")
                        .HasColumnName("DATABASETABLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("TABLENAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NameTId")
                        .HasColumnName("TABLENAME_TID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TableType");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.TaxRate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("TAXCODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTId")
                        .HasColumnName("DESCRIPTION_TID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxRate");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeniorEmpId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("UserMaster");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserRoleModulePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleModuleId");

                    b.ToTable("UserRoleModulePermission");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BooleanValue")
                        .HasColumnName("COLBOOLEAN")
                        .HasColumnType("bit");

                    b.Property<string>("CharacterValue")
                        .HasColumnName("COLCHARACTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DecimalValue")
                        .HasColumnName("COLDECIMAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IntegerValue")
                        .HasColumnName("COLINTEGER")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.Country", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.TableCode", "AddressStyle")
                        .WithMany()
                        .HasForeignKey("AddressStyleId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.Currency", "DefaultCurrency")
                        .WithMany()
                        .HasForeignKey("DefaultCurrencyId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.TaxRate", "DefaultTaxRate")
                        .WithMany()
                        .HasForeignKey("DefaultTaxId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.TableCode", "NameStyle")
                        .WithMany()
                        .HasForeignKey("NameStyleId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.TableCode", "PostCodeSearchCode")
                        .WithMany()
                        .HasForeignKey("PostCodeSearchCodeId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.DailyLoginHistory", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", "User")
                        .WithMany("DailyLoginHistory")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.EmailMergeFields", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.EmailTemplate", "EmailTemplate")
                        .WithMany("EmailMergeFields")
                        .HasForeignKey("EmailTemplateId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.LoginAttemptHistory", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", "User")
                        .WithMany("LoginAttemptHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.RoleModule", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.ModuleMaster", null)
                        .WithMany("RoleModule")
                        .HasForeignKey("ModuleMasterId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.RoleMaster", null)
                        .WithMany("RoleModule")
                        .HasForeignKey("RoleMasterId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.State", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.SystemSettings", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.CompanyMaster", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.TableCode", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.TableType", "TableType")
                        .WithMany("TableCodes")
                        .HasForeignKey("TableTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.CompanyMaster", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserRoleModulePermission", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.RoleModule", "RoleModule")
                        .WithMany("UserRoleModulePermission")
                        .HasForeignKey("RoleModuleId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserRoles", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.RoleMaster", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AdminProject.PersistenceLayer.Entities.Entities.UserSettings", b =>
                {
                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.SettingDefinition", "Definition")
                        .WithMany("UserSettings")
                        .HasForeignKey("SettingId");

                    b.HasOne("AdminProject.PersistenceLayer.Entities.Entities.UserMaster", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
